<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./icon_d_green.png" type="Source" xmlns="http://knime.org/node/v2.8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v2.8 http://knime.org/node/v2.8.xsd">
    <name>VAT</name>
    
    <shortDescription>
        VAT - Variant Annotation Tool
    </shortDescription>
    
    <fullDescription>
        <intro>
        	This is a wrapper node for VAT snpMapper and IndelMapper (designed for version 1.0.0).
        	VAT functionally annotates SNPs, insertions and deletions from a VCF file. It identifies the genes and transcripts affected by a variant.
        	Additionally, snpMapper and IndelMapper output the putative effect of the variant, i.e. loss of function by insertion/deletion frameshift, splice overlap or removed/premature stop codon.
        	The output file of VAT is again a VCF file with the resulting annotations located in the VA-tag.
			<br />
			Further information about VAT at <a href="http://vat.gersteinlab.org/documentation.php"> http://vat.gersteinlab.org/documentation.php </a>
			<br />
			Download of VAT executables, gene intervals and transcript sequences at <a href="http://vat.gersteinlab.org/download.php"> http://vat.gersteinlab.org/download.php </a>
			<br />
			Predecessor Loss-of-Function nodes: Pindel, GATKUnifiedGenotyper, VCFLoader
			<br />
			Successor Loss-of-Function nodes: FilterSummary	
        </intro>
        
        <option name="Folder containing VAT executables">
        	Set the path to the folder of VAT snpMapper and IndelMapper (both tools have to be located in the same folder).
    	</option>
        <option name="Path to gene intervals">
        	Select the path to the interval file containing transcript coordinates.
		</option>
        <option name="Path to transcript sequences">
        	Choose the path to the fasta file of all transcript sequences specified in the gene interval file.
    	</option>
    </fullDescription>
    
    <ports>
        <inPort index="0" name="In-Port">
        	Number, name and position of the cells vary with predecessor nodes. 
        	Therefore, this node just requires from inport at least one cell for a VCF file (its position does not matter). 
        	Additional cells are ignored. In the following example for inport columns the string VAR has to be replaced by snp,  indel, insertions or deletions according to variant type. 
        	This example shows the minimal inport required by VAT.
			<br />
			Cell 0: Path2VCFVARFile (path to the first VCF file)
			<br />
			Cell 1 (optional): Path2VCFVARFile (path to the second VCF file)
    	</inPort>
        <outPort index="0" name="Out-Port">
        	The outport consists of two columns whose names depend on the column names of the inport. 
        	In the following lines the string VAR has to be replaced by snp, indel, insertions or deletions according to variant type.
			<br />
			Cell 0: Path2VCFVARFile (path to the first annotated VCF file)
			<br />
			Cell 1 (optional): Path2VCFVARFile (path to the second annotated VCF file)
    	</outPort>
    </ports>
        
    <views>
        <view index="0" name=""></view>
    </views>
</knimeNode>
