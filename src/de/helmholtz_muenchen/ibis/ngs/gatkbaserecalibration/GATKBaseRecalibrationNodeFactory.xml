<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./icon_d_green.png" type="Source" xmlns="http://knime.org/node/v2.8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v2.8 http://knime.org/node/v2.8.xsd">
    <name>GATKBaseRecalibration</name>
    
    <shortDescription>
        Recalibration of sequencing quality scores.
    </shortDescription>
    
    <fullDescription>
        <intro>
        	This is a wrapper node for AnalyzeCovariates, BaseRecalibrator and PrintReads of the Genome Analysis Toolkit (GATK). 
        	This node addresses the problem of systematic errors in the base quality score emitted by sequencing machines. 
        	As these base qualities are used by many variant calling tools removing the bias leads to more accurate variant calls. 
        	The process of recalibration consists of 3 steps.
			<br />
			<b>Step 1:</b> A machine learning device is trained to build a model of covariation which is generated from the actual data and from known sites of genetic variation. 
			(walkers: BaseRecalibrator)
			<br />
			<b>Step 2:</b> This optional step builds a second model and compares it to the first one. 
			The comparison allows to generate before/after plots of the quality values. 
			(walkers: BaseRecalibrator + AnalyzeCovariates).
			<br />
			<b>Step 3:</b> Finally, the model is applied to the alignment data and the base qualities are adapted to the biases found. 
			(walkers: PrintReads)
			<br />
			For further information, see the GATK documentation of the <a href="https://www.broadinstitute.org/gatk/guide/tooldocs/org_broadinstitute_gatk_tools_walkers_bqsr_BaseRecalibrator.php">BaseRecalibrator</a>,
			the <a href="https://www.broadinstitute.org/gatk/guide/tooldocs/org_broadinstitute_gatk_tools_walkers_bqsr_AnalyzeCovariates.php">AnalyzeCovariates</a> and
			the <a href="https://www.broadinstitute.org/gatk/guide/tooldocs/org_broadinstitute_gatk_tools_walkers_readutils_PrintReads.php">PrintReads</a> walkers.
    	</intro>
        
        <tab name="Options">
            <option name="Sets of known polymorphisms">
            	You have to provide the node with at least one of the three named sets: 
            	Indels from 1000 Genomes project, indels from Mills and 1000 Genomes project, variants from dbSNP. 
            	BaseRecalibrator needs the sets for training its model.
        	</option>
            <option name="Interval for recalibration">
            	You can check this option to perform recalibration in certain genomic regions. 
            	You have to specify the intervals in a text file in <a href="http://genome.ucsc.edu/FAQ/FAQformat.html"> BED format</a> and select the file in the file browser.
            </option>	
        	<option name="Analyze Covariates">
    		Before/after plots of the base quality score can be generated.<br />
        		<b>Optional flags</b>: Set additional command line flags for the AnalyzeCovariates walker.
        	</option>
        	<option name="Print Reads">
			Specify whether to remove all additional information from the output BAM file except of the read group tag. The option reduces the output file size.<br />
        	<b>Optional flags</b>: Set additional command line flags for the PrintReads walker.
			</option>
			<option name="General options">
            <b>Number of CPU threads</b>: Increasing the number of threads speeds up the node, but it also increases the memory required for the calculations.
            	The BaseRecalibrator and the PrintReads walker run in multi-threaded mode.<br />
            <b>Shared Java Memory</b>: Set the maximum Java heap size shared by all CPU threads.<br />
        	</option>
        </tab>
        <tab name="BaseRecalibrator">
        	<option name="Cycle threshold">
            	Set the maximum cycle value permitted for the Cycle covariate. (Default value = 500)<br />
            	The cycle covariate will generate an error if it encounters a cycle greater than this value.
            	This argument is ignored if the Cycle covariate is not used.
        	</option>
        	<option name="Gap open penalty">
            	Gap open penalty for calculating BAQ (par-base alignment quality, probability that a base is not correctly aligned). 
            	Default value is 40. 30 is perhaps better for whole genome call sets.
        	</option>
        	<option name="Default quality for deletions">
            	Set the default quality to use as a prior (reported quality) in the base deletion covariate model. (Default value = 45)<br />
            	This value will replace all base qualities in the read for this default value.
            	A Negative value turns it off.
        	</option>
            <option name="Default quality for insertions">
            	Set the default base quality to use as a prior (reported quality) in the base insertion covariate model. (Default value = 45)<br />
            	This parameter is used for all reads without insertion quality scores for each base. [default is on] 
            	Setting this value to -1 disables the option.
        	</option>
            <option name="Default quality for mismatches">
            	Set the default quality to use as a prior (reported quality) in the base mismatch covariate model. (Default value = -1)<br />
            	This value will replace all base qualities in the read for this default value.
            	A negative value turns it off.
        	</option>
            <option name="k-mer context size for indels">
            	Define the size of the k-mer context to be used for base insertions and deletions. (Default value = 3)<br />
            	The context covariate will use a context of this size to calculate its covariate value for base insertions and deletions.
            	The value must be between 1 and 13 (inclusive). Note that higher values will increase runtime and required java heap size. 
        	</option>
            <option name="k-mer context size for mismatches">
            	Set the size of the k-mer context to be used for base mismatches. (Default value = 2)<br />
            	The context covariate will use a context of this size to calculate its covariate value for base mismatches.
            	The value must be between 1 and 13 (inclusive).
            	Note that higher values will increase runtime and required java heap size. 
        	</option>
            <option name="Quality threshold for read tails">
            	Define the minimum quality for tha bases in the tail of the reads to be considered. (Default value = 2)<br />
            	Reads with low quality bases on either tail (beginning or end) will not be considered in the context.
            	This parameter defines the quality below which (inclusive) a tail is considered low quality 
        	</option>
            <option name="Optional flags">
        		Set additional command line flags for the BaseRecalibrator walker.
        	</option>
        </tab>
        
        <tab name="Preference page">
        	<option name="HTE">
        		Set threshold for repeated execution.
        		Only used if HTE is enabled in the preference page.
        	</option>
        	<option name="Path to GATK jar file">
        		Set the path to the GenomeAnalysisTK.jar.
        		This will be done automatically if the path is already defined in the preference page. 
        	</option>
        	<option name="Path to reference genome">
        		Set the path to the reference genome.
        	</option>
        	<option name="Path to 1000G Indels">
        		Set the path to the 1000G project indels data set.
        	</option>
        	<option name="Path to Mills">
        		Set the path to the Mills and 1000G reference data set.
        	</option>
        	<option name="Path to dbSNP">
        		Set the path to the dbSNP reference data set.
        	</option>
        </tab>
        
    </fullDescription>
    
    <ports>
        	<inPort index="0" name="Input BAM">
        	Cell 0: Path to input BAM file
    	</inPort>
        	<outPort index="0" name="Output">
        	Cell 0: Path to recalibrated BAM file
    	</outPort>
    </ports>
    <views>
        <view index="0" name="STDOUT / STDERR">The node offers a direct view of its standard out and the standard error of the tool. </view>
    </views>
</knimeNode>
