<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./default.png" type="Source" xmlns="http://knime.org/node/v2.8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v2.10 http://knime.org/node/v2.10.xsd">
    <name>ThunderCall</name>
    
    <shortDescription>
        Genotype caller.
    </shortDescription>
    
    <fullDescription>
        <intro>Thunder is a tool for genotype calling and haplotype phasing. This is the part which executes genotype calling. Input must be in glf format. Please use Samtools Hybrid node if you have only bam files. Samtools Hybrid will convert them into glf format.</intro>
        
        
        <option name="short name of first option (like in the dialog)">description of first option</option>
        <option name="short name of second option (like in the dialog)">description of second option</option>
        <!-- possibly more options that can also be grouped by tabs -->
        <!--
        <tab name="Standard Options">
            <option name="short name of first option (like in the dialog)">description of first option</option>
            <option name="short name of second option (like in the dialog)">description of second option</option>
        </tab>
        <tab name="Advanced Options">
            <option name="short name of first advanced option (like in the dialog)">description of first advanced option</option>
        </tab>
        -->
    </fullDescription>
    
    <ports>
        <inPort index="0" name="glf files">Can be multiple samples</inPort>
        <!-- possibly more input ports here-->
        <outPort index="0" name="vcf output">The output is in vcf format. The original output of Thunder Call is saved as a flow variable in case Thunder Phase is employed later.</outPort>
        <!-- possibly more output ports here-->
    </ports>    
    <views>
        <view index="0" name="name of first view">Description of first view...</view>
        <!--view index="1" name="name of second view">Description of second view...</view-->
    </views>
</knimeNode>
