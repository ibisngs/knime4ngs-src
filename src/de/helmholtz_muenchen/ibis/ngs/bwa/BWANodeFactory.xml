<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 2.0//EN" "http://www.knime.org/Node.dtd">
<knimeNode icon="./icon_d_yellow.png" type="Source">
    <name>BWA</name>
    
    <shortDescription>
    	BWA - Burrows-Wheeler Alignment Tool 
    </shortDescription>
    
    <fullDescription>
        <intro>
        	BWA is a fast light-weighted tool that aligns relatively short sequences (queries) to a sequence database (target), such as the human reference genome. 
        	It implements three different algorithms, all based on Burrows-Wheeler Transform (BWT).
        	The first algorithm BWA-backtrack is designed for short queries up to ~200bp with low error rate (&lt;3%).
        	It does gapped global alignment w.r.t. queries, supports paired-end reads, and is one of the fastest short read alignment algorithms to date while also visiting suboptimal hits.
        	The second algorithm BWA-SW is designed for long reads (ranging from 70bp to 1Mbp) with more errors.
        	It performs heuristic Smith-Waterman-like alignment to find high-scoring local hits (and thus chimera).
        	On low-error short queries, BWA-SW is slower and less accurate than the first algorithm, but on long queries, it is better.
        	The latest algorithm BWA-MEM is similar to BWA-SW. 
        	It is generally recommended for high-quality queries as it is faster and more accurate than BWA-SW.
        	BWA-MEM also has better performance than BWA-backtrack for 70-100bp Illumina reads.
        	<br></br>
        	Source: <a href="http://bio-bwa.sourceforge.net/bwa.shtml">http://bio-bwa.sourceforge.net/bwa.shtml</a>
		</intro>
        
        <tab name="Options">
           <option name="Index reference sequence">Uncheck this option if the reference sequence is already indexed (using bwa). In this case the reference sequence 
        		will not be indexed again.</option>
        	<option name="Algorithm for constructing BWT index">
        	<ul>
        		<li>
        			BWT-SW: Algorithm implemented in BWT-SW.
        			This method works with the whole genome, but it does not work with database smaller than 10MB and it is usually slower than IS.
        		</li>
        		<li>
        			IS: IS linear-time algorithm for constructing suffix array.
        			It requires 5.37N memory where N is the size of the database.
        			IS is moderately fast, but does not work with database larger than 2GB.
        			IS is the default algorithm due to its simplicity.
        			The current codes for IS algorithm are reimplemented by Yuta Mori.
        		</li>
        	</ul>
        	</option>
        	<option name="Algorithm for mapping">
        		Define which algorithm should be used for mapping.
        	<ul>
        		<li>BWA_MEM: This algorithm is designed for Illumina sequence reads up to 100bp. 
        		It is generally recommended for high-quality queries as it is faster and more accurate than the other two algorithms. 
        		BWA-MEM also has better performance than BWA-backtrack for 70-100bp Illumina reads. </li>
        		<li>BWA-backtrack: This algorithm is designed for longer sequences ranged from 70bp to 1 Mbp.</li>
        		<li>BWA-SW: Analogous to BWA-backtrack BWA-SW is also designed for longer sequences ranged from 70bp to 1 Mbp.</li>
        	</ul>	
    		</option>
        	<option name="Build color-space index">Build a color-space index. The input fasta should be in nucleotide space.</option>
        	<option name="Specify read group header">
        		GATK requires a read group identifier (ID) and sample information (SM), e.g. specified by ’@RG\tID:foo\tSM:bar’.
        		All reads within a read group are assumed to come from the same instrument run and to therefore share the same error model.
        		SM defines the name of the sample sequenced in a read group.
        		Read group header will not be added if BWA-SW is used.
        	</option>
        	<option name="Number of threads">
        		Set the number of threads to be used.<br />
        		BWA aln (sub-command of BWA-backtrack), BWA-SW and BWA-MEM can be run in multi-threading mode.<br />
        		Increasing the number of threads speeds up the node, but also increases the memory required for the calculations.
        	</option>	
        </tab>
        <tab name="Preference page">
        	<option name="HTE">
 				Set threshold for repeated execution.
 				Only used if HTE is enabled in the preference page.
 			</option>
        	<option name="Path to bwa">Set the path to BWA executable. This will be done automatically if the path is already defined in the preference page.</option>
        	<option name="Path to the reference sequence">Choose a reference sequence, such as a genome sequence, to map the reads (file type: FastA). This will be done automatically if the path is already defined in the preference page.</option>
		</tab>       

    </fullDescription>
    
    <ports>
    	<inPort index="0" name="In-Port">Cell 0: Path to ReadFile1<br></br>Cell 1 (Optional): Path to ReadFile2 (if paired end mapping is used)</inPort>
        <outPort index="0" name="Out-Port">Cell 0: Path to SAM file<br></br>Cell 1: Path to RefFile</outPort>
    </ports>
    
        <views>
        <view index="0" name="STDOUT / STDERR">The node offers a direct view of its standard out and the standard error of the tool. </view>
</views>
    
</knimeNode>
